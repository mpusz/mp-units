{"version": "https://jsonfeed.org/version/1", "title": "mp-units", "home_page_url": "https://mpusz.github.io/mp-units/HEAD/", "feed_url": "https://mpusz.github.io/mp-units/HEAD/feed_json_updated.json", "description": "The quantities and units library for C++", "icon": null, "authors": [{"name": "mp-units Team"}], "language": "en", "items": [{"id": "https://mpusz.github.io/mp-units/HEAD/blog/2025/06/16/introducing-absolute-quantities/", "url": "https://mpusz.github.io/mp-units/HEAD/blog/2025/06/16/introducing-absolute-quantities/", "title": "Introducing Absolute Quantities", "content_html": "<h1>Introducing Absolute Quantities</h1>\n<p>An <strong>absolute quantity</strong> represents an <strong>absolute amount</strong> of a physical property \u2014\nmeasured from a true, physically meaningful zero. Examples include <em>mass</em> in kilograms,\n<em>temperature</em> in Kelvin, or <em>length</em> in meters (as a size, not a position). Such\nquantities live on a <strong>ratio scale</strong> and have a well-defined origin; negative values are\ntypically meaningless.</p>\n<p>Absolute quantities stand in contrast to:</p>\n<ul>\n<li><strong>Affine points</strong> (e.g., $20\\ \\mathrm{\u00b0C}$, $100\\ \\mathrm{m}\\ \\mathrm{AMSL}$) \u2014 values\n  measured relative to an arbitrary or conventional origin.</li>\n<li><strong>Deltas</strong> (e.g., $10\\ \\mathrm{K}$,\u202f$\u20135\\ \\mathrm{kg}$) \u2014 differences between two values.</li>\n</ul>\n<p>Arithmetic on absolute quantities behaves like ordinary algebra: addition, subtraction,\nand scaling are well-defined and map naturally to physical reasoning. This article\nproposes making absolute quantities the <strong>default abstraction</strong> in <strong>mp-units\u202fV3</strong>,\nreflecting how scientists express equations in practice.</p>\n<hr>\n<p><em>Note: Revised October\u202f31\u202f2025 for clarity, accuracy, and completeness.</em></p>", "image": "https://mpusz.github.io/mp-units/HEADassets/images/social/blog/posts/introducing-absolute-quantities.png", "date_modified": "2025-10-31T22:49:59+00:00", "authors": [{"name": "Mateusz Pusz"}], "tags": ["Metrology"]}, {"id": "https://mpusz.github.io/mp-units/HEAD/blog/2023/09/24/whats-new-in-mp-units-20/", "url": "https://mpusz.github.io/mp-units/HEAD/blog/2023/09/24/whats-new-in-mp-units-20/", "title": "What's new in mp-units 2.0?", "content_html": "<h1>What's new in mp-units 2.0?</h1>\n<p><strong>After a year of hard work, we've just released mp-units 2.0.0. It can be obtained from\n<a href=\"https://github.com/mpusz/mp-units/releases/tag/v2.0.0\">GitHub</a> and\n<a href=\"https://conan.io/center/recipes/mp-units?version=2.0.0\">Conan</a>.</strong></p>\n<p>The list of the most significant changes introduced by the new version can be\nfound in our <a href=\"../../release_notes.md#2.0.0\">Release Notes</a>. We will also\ndescribe some of them in this post.</p>", "image": "https://mpusz.github.io/mp-units/HEADassets/images/social/blog/posts/2.0.0-released.png", "date_modified": "2025-10-14T16:25:58+00:00", "authors": [{"name": "Mateusz Pusz"}], "tags": ["Releases"]}, {"id": "https://mpusz.github.io/mp-units/HEAD/blog/2023/12/09/mp-units-210-released/", "url": "https://mpusz.github.io/mp-units/HEAD/blog/2023/12/09/mp-units-210-released/", "title": "mp-units 2.1.0 released", "content_html": "<h1>mp-units 2.1.0 released</h1>\n<p><strong>A new product version can be obtained from\n<a href=\"https://github.com/mpusz/mp-units/releases/tag/v2.1.0\">GitHub</a> and\n<a href=\"https://conan.io/center/recipes/mp-units?version=2.1.0\">Conan</a>.</strong></p>\n<p>The list of the most significant changes introduced by the new version can be\nfound in our <a href=\"../../release_notes.md#2.1.0\">Release Notes</a>. We will also\ndescribe the most important of them in this post.</p>", "image": "https://mpusz.github.io/mp-units/HEADassets/images/social/blog/posts/2.1.0-released.png", "date_modified": "2025-10-14T16:25:58+00:00", "authors": [{"name": "Mateusz Pusz"}], "tags": ["Releases"]}, {"id": "https://mpusz.github.io/mp-units/HEAD/blog/2024/06/14/mp-units-220-released/", "url": "https://mpusz.github.io/mp-units/HEAD/blog/2024/06/14/mp-units-220-released/", "title": "mp-units 2.2.0 released", "content_html": "<h1>mp-units 2.2.0 released</h1>\n<p><strong>A new product version can be obtained from\n<a href=\"https://github.com/mpusz/mp-units/releases/tag/v2.2.1\">GitHub</a> and\n<a href=\"https://conan.io/center/recipes/mp-units?version=2.2.1\">Conan</a>.</strong></p>\n<p>Among other features, this release provides long-awaited support for C++20\nmodules, redesigns and enhances text output formatting, and greatly simplifies\nquantity point usage. This post describes those and a few other smaller\ninteresting improvements, while a much longer list of the most significant\nchanges introduced by the new version can be found in our\n<a href=\"../../release_notes.md#2.2.1\">Release Notes</a>.</p>", "image": "https://mpusz.github.io/mp-units/HEADassets/images/social/blog/posts/2.2.0-released.png", "date_modified": "2025-10-14T16:25:58+00:00", "authors": [{"name": "Mateusz Pusz"}], "tags": ["Releases"]}, {"id": "https://mpusz.github.io/mp-units/HEAD/blog/2024/09/27/mp-units-230-released/", "url": "https://mpusz.github.io/mp-units/HEAD/blog/2024/09/27/mp-units-230-released/", "title": "mp-units 2.3.0 released", "content_html": "<h1>mp-units 2.3.0 released</h1>\n<p><strong>A new product version can be obtained from\n<a href=\"https://github.com/mpusz/mp-units/releases/tag/v2.3.0\">GitHub</a>\nand\n<a href=\"https://conan.io/center/recipes/mp-units?version=2.3.0\">Conan</a>.</strong></p>\n<p>This release fine-tunes many key features of the library. This post describes\nthe most interesting improvements, while a much longer list of the changes\nintroduced by the new version can be found in our\n<a href=\"../../release_notes.md#2.3.0\">Release Notes</a>.</p>", "image": "https://mpusz.github.io/mp-units/HEADassets/images/social/blog/posts/2.3.0-released.png", "date_modified": "2025-10-14T16:25:58+00:00", "authors": [{"name": "Mateusz Pusz"}], "tags": ["Releases"]}, {"id": "https://mpusz.github.io/mp-units/HEAD/blog/2024/11/05/mp-units-240-released/", "url": "https://mpusz.github.io/mp-units/HEAD/blog/2024/11/05/mp-units-240-released/", "title": "mp-units 2.4.0 Released", "content_html": "<h1>mp-units 2.4.0 Released</h1>\n<p><strong>A new product version can be obtained from\n<a href=\"https://github.com/mpusz/mp-units/releases/tag/v2.4.0\">GitHub</a> and\n<a href=\"https://conan.io/center/recipes/mp-units?version=2.4.0\">Conan</a>.</strong></p>\n<p>This release was unexpected. We planned a significant new feature to happen next, but while\npreparing for it and writing API Reference documentation, we made so many vital fixes and\nimprovements that we decided they deserve a dedicated release first.</p>\n<p>This post describes the most significant improvements while a much longer list\nof the changes introduced by the new version can be found in our\n<a href=\"../../release_notes.md#2.4.0\">Release Notes</a>.</p>", "image": "https://mpusz.github.io/mp-units/HEADassets/images/social/blog/posts/2.4.0-released.png", "date_modified": "2025-10-14T16:25:58+00:00", "authors": [{"name": "Mateusz Pusz"}], "tags": ["Releases"]}, {"id": "https://mpusz.github.io/mp-units/HEAD/blog/2025/01/15/bringing-quantity-safety-to-the-next-level/", "url": "https://mpusz.github.io/mp-units/HEAD/blog/2025/01/15/bringing-quantity-safety-to-the-next-level/", "title": "Bringing Quantity-Safety To The Next Level", "content_html": "<h1>Bringing Quantity-Safety To The Next Level</h1>\n<p>All quantities and units libraries need to be unit-safe. Most of the libraries\non the market do this correctly. Some of them are also dimension-safe, which\nadds another level of protection for their users.</p>\n<p><strong>mp-units</strong> is probably the only library on the market that additionally is\nquantity-safe. This gives a new quality and possibilities. I've described the\nmajor idea behind it, implementation details, and benefits to the users in the\n<a href=\"isq-part-5-benefits.md\">series of posts about the International System of Quantities</a>.</p>\n<p>However, this is only the beginning. We've always planned more and worked on the\nextensions in our free time. In this post, I will describe:</p>\n<ul>\n<li>What a quantity character is?</li>\n<li>The importance of using proper representation types for the quantities.</li>\n<li>The power of providing character-specific operations for the quantities.</li>\n<li>Discuss implementation challenges and possible solutions.</li>\n</ul>", "image": "https://mpusz.github.io/mp-units/HEADassets/images/social/blog/posts/bringing-quantity-safety-to-the-next-level.png", "date_modified": "2025-10-14T16:25:58+00:00", "authors": [{"name": "Mateusz Pusz"}], "tags": ["Metrology"]}, {"id": "https://mpusz.github.io/mp-units/HEAD/blog/2024/10/07/international-system-of-quantities-isq-part-1---introduction/", "url": "https://mpusz.github.io/mp-units/HEAD/blog/2024/10/07/international-system-of-quantities-isq-part-1---introduction/", "title": "International System of Quantities (ISQ): Part 1 - Introduction", "content_html": "<h1>International System of Quantities (ISQ): Part 1 - Introduction</h1>\n<p>This post starts a series of articles about the International System of\nQuantities (ISQ).\nIn this series, we will describe:</p>\n<ul>\n<li>What is ISQ?</li>\n<li>Which engineering problems does ISQ help to solve and how?</li>\n<li>How to model and implement it in the programming language?</li>\n<li>What is missing in the ISQ, and why is that a problem?</li>\n</ul>", "image": "https://mpusz.github.io/mp-units/HEADassets/images/social/blog/posts/isq-part-1-introduction.png", "date_modified": "2025-10-14T16:25:58+00:00", "authors": [{"name": "Mateusz Pusz"}], "tags": ["Metrology"]}, {"id": "https://mpusz.github.io/mp-units/HEAD/blog/2024/10/14/international-system-of-quantities-isq-part-2---problems-when-isq-is-not-used/", "url": "https://mpusz.github.io/mp-units/HEAD/blog/2024/10/14/international-system-of-quantities-isq-part-2---problems-when-isq-is-not-used/", "title": "International System of Quantities (ISQ): Part 2 - Problems when ISQ is not used", "content_html": "<h1>International System of Quantities (ISQ): Part 2 - Problems when ISQ is not used</h1>\n<p>This article is the next one in our series about the ISQ. After introducing the\nbasic terms and systems, this article will talk about the issues we face when\nwe base the quantities and units library on just units or dimensions.</p>", "image": "https://mpusz.github.io/mp-units/HEADassets/images/social/blog/posts/isq-part-2-problems-when-isq-is-not-used.png", "date_modified": "2025-10-14T16:25:58+00:00", "authors": [{"name": "Mateusz Pusz"}], "tags": ["Metrology"]}, {"id": "https://mpusz.github.io/mp-units/HEAD/blog/2024/10/21/international-system-of-quantities-isq-part-3---modeling-isq/", "url": "https://mpusz.github.io/mp-units/HEAD/blog/2024/10/21/international-system-of-quantities-isq-part-3---modeling-isq/", "title": "International System of Quantities (ISQ): Part 3 - Modeling ISQ", "content_html": "<h1>International System of Quantities (ISQ): Part 3 - Modeling ISQ</h1>\n<p>The physical units libraries on the market typically only focus on modeling one\nor more systems of units. However, as we have learned, this is not the only\nsystem kind to model. Another, and maybe even more important, is a system of\nquantities. The most important example here is the International System of\nQuantities (ISQ) defined by ISO/IEC 80000.</p>\n<p>This article continues our series about the International System of Quantities.\nThis time, we will learn about the main ideas behind the ISQ and describe how\nit can be modelled in a programming language.</p>", "image": "https://mpusz.github.io/mp-units/HEADassets/images/social/blog/posts/isq-part-3-modeling-isq.png", "date_modified": "2025-10-14T16:25:58+00:00", "authors": [{"name": "Mateusz Pusz"}], "tags": ["Metrology"]}, {"id": "https://mpusz.github.io/mp-units/HEAD/blog/2024/10/28/international-system-of-quantities-isq-part-4---implementing-isq/", "url": "https://mpusz.github.io/mp-units/HEAD/blog/2024/10/28/international-system-of-quantities-isq-part-4---implementing-isq/", "title": "International System of Quantities (ISQ): Part 4 - Implementing ISQ", "content_html": "<h1>International System of Quantities (ISQ): Part 4 - Implementing ISQ</h1>\n<p>Up until now, we have introduced the International System of Quantities and\ndescribed how we can model its main aspects. This article will present how to\nimplement those models in a programming language, and we will point out some of\nthe first issues that stand in our way.</p>", "image": "https://mpusz.github.io/mp-units/HEADassets/images/social/blog/posts/isq-part-4-implementing-isq.png", "date_modified": "2025-10-14T16:25:58+00:00", "authors": [{"name": "Mateusz Pusz"}], "tags": ["Metrology"]}, {"id": "https://mpusz.github.io/mp-units/HEAD/blog/2024/11/04/international-system-of-quantities-isq-part-5---benefits/", "url": "https://mpusz.github.io/mp-units/HEAD/blog/2024/11/04/international-system-of-quantities-isq-part-5---benefits/", "title": "International System of Quantities (ISQ): Part 5 - Benefits", "content_html": "<h1>International System of Quantities (ISQ): Part 5 - Benefits</h1>\n<p>In the previous articles, we introduced the International System of Quantities,\ndescribed how we can model and implement it in a programming language, and\npresented the issues of software that does not use such abstraction to\nimplement a units library.</p>\n<p>Some of the issues raised in\n<a href=\"isq-part-2-problems-when-isq-is-not-used.md\">Part 2</a> of our series were\naddressed in <a href=\"isq-part-3-modeling-isq.md\">Part 3</a> already. This article will\npresent how our ISQ model elegantly addresses the remaining problems.</p>", "image": "https://mpusz.github.io/mp-units/HEADassets/images/social/blog/posts/isq-part-5-benefits.png", "date_modified": "2025-10-14T16:25:58+00:00", "authors": [{"name": "Mateusz Pusz"}], "tags": ["Metrology"]}, {"id": "https://mpusz.github.io/mp-units/HEAD/blog/2024/11/11/international-system-of-quantities-isq-part-6---challenges/", "url": "https://mpusz.github.io/mp-units/HEAD/blog/2024/11/11/international-system-of-quantities-isq-part-6---challenges/", "title": "International System of Quantities (ISQ): Part 6 - Challenges", "content_html": "<h1>International System of Quantities (ISQ): Part 6 - Challenges</h1>\n<p>This article might be the last one from our series. This time, we will discuss the\nchallenges and issues with modeling of the ISQ in software.</p>", "image": "https://mpusz.github.io/mp-units/HEADassets/images/social/blog/posts/isq-part-6-challenges.png", "date_modified": "2025-10-14T16:25:58+00:00", "authors": [{"name": "Mateusz Pusz"}], "tags": ["Metrology"]}, {"id": "https://mpusz.github.io/mp-units/HEAD/blog/2023/11/12/report-from-the-kona-2023-iso-c-committee-meeting/", "url": "https://mpusz.github.io/mp-units/HEAD/blog/2023/11/12/report-from-the-kona-2023-iso-c-committee-meeting/", "title": "Report from the Kona 2023 ISO C++ Committee meeting", "content_html": "<h1>Report from the Kona 2023 ISO C++ Committee meeting</h1>\n<p><strong>Several groups in the ISO C++ Committee reviewed the\n<a href=\"https://wg21.link/p1935\">P1935: A C++ Approach to Physical Units</a> proposal in\nBelfast 2019 and Prague 2020. All those groups expressed interest in the\npotential standardization of such a library and encouraged further work. The\nauthors also got valuable initial feedback that highly influenced the design of\nthe V2 version of the mp-units library.</strong></p>\n<p>In the following years, we scoped on getting more feedback from the production\nand design. This resulted in version 2 of the <strong>mp-units</strong> library that\nresolved many issues the users and Committee members raised. The features and\ninterfaces of this version are close to being the best we can get with the\ncurrent version of the C++ language standard.</p>", "image": "https://mpusz.github.io/mp-units/HEADassets/images/social/blog/posts/kona-2023-report.png", "date_modified": "2025-10-14T16:25:58+00:00", "authors": [{"name": "Mateusz Pusz"}], "tags": ["WG21 Updates"]}, {"id": "https://mpusz.github.io/mp-units/HEAD/blog/2024/07/02/report-from-the-st-louis-2024-iso-c-committee-meeting/", "url": "https://mpusz.github.io/mp-units/HEAD/blog/2024/07/02/report-from-the-st-louis-2024-iso-c-committee-meeting/", "title": "Report from the St. Louis 2024 ISO C++ Committee meeting", "content_html": "<h1>Report from the St. Louis 2024 ISO C++ Committee meeting</h1>\n<p>We made significant progress in the standardization of this library during the\nISO C++ Committee meeting in St. Louis.</p>", "image": "https://mpusz.github.io/mp-units/HEADassets/images/social/blog/posts/st.louis-2024-report.png", "date_modified": "2025-10-14T16:25:58+00:00", "authors": [{"name": "Mateusz Pusz"}], "tags": ["WG21 Updates"]}, {"id": "https://mpusz.github.io/mp-units/HEAD/blog/2024/04/15/report-from-the-tokyo-2024-iso-c-committee-meeting/", "url": "https://mpusz.github.io/mp-units/HEAD/blog/2024/04/15/report-from-the-tokyo-2024-iso-c-committee-meeting/", "title": "Report from the Tokyo 2024 ISO C++ Committee meeting", "content_html": "<h1>Report from the Tokyo 2024 ISO C++ Committee meeting</h1>\n<p>The Tokyo 2024 meeting was a very important step in the standardization of this\nlibrary. Several WG21 groups reviewed proposals, and the feedback was really\ngood.</p>", "image": "https://mpusz.github.io/mp-units/HEADassets/images/social/blog/posts/tokyo-2024-report.png", "date_modified": "2025-10-14T16:25:58+00:00", "authors": [{"name": "Mateusz Pusz"}], "tags": ["WG21 Updates"]}, {"id": "https://mpusz.github.io/mp-units/HEAD/blog/2024/11/25/report-from-the-wroc%C5%82aw-2024-iso-c-committee-meeting/", "url": "https://mpusz.github.io/mp-units/HEAD/blog/2024/11/25/report-from-the-wroc%C5%82aw-2024-iso-c-committee-meeting/", "title": "Report from the Wroc\u0142aw 2024 ISO C++ Committee meeting", "content_html": "<h1>Report from the Wroc\u0142aw 2024 ISO C++ Committee meeting</h1>\n<p>The Wroc\u0142aw 2024 meeting was another efficient step in the standardization of\nthis library. We've spent the entire day on the joint LEWGI and SG6 discussion\nand got lots of feedback. We've also introduced <code>std::fixed_string</code> to LEWG for\nC++26.</p>", "image": "https://mpusz.github.io/mp-units/HEADassets/images/social/blog/posts/wroc\u0142aw-2024-report.png", "date_modified": "2025-10-14T16:25:58+00:00", "authors": [{"name": "Mateusz Pusz"}], "tags": ["WG21 Updates"]}]}